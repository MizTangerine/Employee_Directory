{"version":3,"sources":["components/Header.jsx","components/Sort.jsx","components/Employee.jsx","App.js","index.js"],"names":["Header","useSortableData","employees","config","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","Employee","props","value","setValue","getClassNamesFor","name","type","autoComplete","placeholder","onChange","e","target","onClick","className","filter","item","title","toLowerCase","includes","first_name","last_name","email","phone","map","emp","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s6GASeA,MANf,WACI,OACI,qD,qBC+BOC,EAlCS,SAACC,GAA8B,IAAnBC,EAAkB,uDAAT,KAAS,EACdC,IAAMC,SAASF,GADD,mBAC3CG,EAD2C,KAC/BC,EAD+B,KAG5CC,EAAcJ,IAAMK,SAAQ,WAC9B,IAAIC,EAAa,YAAOR,GAYxB,OAXmB,OAAfI,GACAI,EAAcC,MAAK,SAACC,EAAGC,GACnB,OAAID,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACD,cAAzBR,EAAWS,WAA6B,EAAI,EAEnDH,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACD,cAAzBR,EAAWS,UAA4B,GAAK,EAEhD,KAGRL,IACR,CAACR,EAAWI,IAETU,EAAc,SAACF,GACjB,IAAIC,EAAY,YAEZT,GACAA,EAAWQ,MAAQA,GACM,cAAzBR,EAAWS,YAEXA,EAAY,cAEhBR,EAAc,CAAEO,MAAKC,eAGzB,MAAO,CAAEb,UAAWM,EAAaQ,cAAaV,eC6DnCW,G,MAzFE,SAACC,GAAW,IAAD,EACEb,mBAAS,IADX,mBACjBc,EADiB,KACVC,EADU,OAEuBnB,EAAgBiB,EAAMhB,WAA7DA,EAFgB,EAEhBA,UAAWc,EAFK,EAELA,YAAaV,EAFR,EAEQA,WAC1Be,EAAmB,SAACC,GACtB,OAAKhB,GAGEA,EAAWQ,MAAQQ,EAAOhB,EAAWS,UAFjC,QAIf,OACI,qCACI,uBACIQ,KAAK,OACLC,aAAa,MACbC,YAAY,6BACZN,MAAOA,EACPO,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOT,UAErC,kCACI,gCACI,+BAEI,6BACI,wBACII,KAAK,SACLM,QAAS,kBAAMb,EAAY,eAC3Bc,UAAWT,EAAiB,cAHhC,0BAMJ,6BACI,wBACIE,KAAK,SACLM,QAAS,kBAAMb,EAAY,cAC3Bc,UAAWT,EAAiB,aAHhC,yBAMJ,6BACI,wBACIE,KAAK,SACLM,QAAS,kBAAMb,EAAY,UAC3Bc,UAAWT,EAAiB,SAHhC,qBAMJ,6BACI,wBACIE,KAAK,SACLM,QAAS,kBAAMb,EAAY,UAC3Bc,UAAWT,EAAiB,SAHhC,qBAMJ,6BACI,wBACIE,KAAK,SACLM,QAAS,kBAAMb,EAAY,UAC3Bc,UAAWT,EAAiB,SAHhC,iCAQZ,gCACKnB,EACI6B,QAAO,SAAAC,GACJ,OAAKb,MACDa,EAAKC,MAAMC,cAAcC,SAAShB,EAAMe,gBACrCF,EAAKI,WAAWF,cAAcC,SAAShB,EAAMe,gBAC7CF,EAAKK,UAAUH,cAAcC,SAAShB,EAAMe,gBAC5CF,EAAKM,MAAMJ,cAAcC,SAAShB,EAAMe,gBACxCF,EAAKO,MAAML,cAAcC,SAAShB,EAAMe,mBAMlDM,KAAI,SAACC,GAAD,OACD,+BAEI,6BAAKA,EAAIL,aACT,6BAAKK,EAAIJ,YACT,6BAAKI,EAAIR,QACT,6BAAKQ,EAAIH,QACT,oBAAIR,UAAU,QAAd,SAAuBW,EAAIF,UANtBE,EAAIC,iBCvE1B,SAASC,IAEtB,OACE,gCACE,cAAC,EAAD,IAEA,cAAC,EAAD,CAAUzC,UAAWA,OCT3B0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.2560e290.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <h1>Employee Directory</h1>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst useSortableData = (employees, config = null) => {\r\n    const [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n    const sortedItems = React.useMemo(() => {\r\n        let sortableItems = [...employees];\r\n        if (sortConfig !== null) {\r\n            sortableItems.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return sortableItems;\r\n    }, [employees, sortConfig]);\r\n\r\n    const requestSort = (key) => {\r\n        let direction = 'ascending';\r\n        if (\r\n            sortConfig &&\r\n            sortConfig.key === key &&\r\n            sortConfig.direction === 'ascending'\r\n        ) {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    return { employees: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nexport default useSortableData","import React, { useState } from 'react';\r\nimport useSortableData from './Sort'\r\nimport './Employee.css'\r\n\r\n\r\nconst Employee = (props) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const { employees, requestSort, sortConfig } = useSortableData(props.employees);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return 'sort';\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : 'sort';\r\n    };\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Enter Search Criteria Here\"\r\n                value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {/* <th>Avatar</th> */}\r\n                        <th>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => requestSort('first_name')}\r\n                                className={getClassNamesFor('first_name')}\r\n                            >First Name</button>\r\n                        </th>\r\n                        <th>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => requestSort('last_name')}\r\n                                className={getClassNamesFor('last_name')}\r\n                            >Last Name</button>\r\n                        </th>\r\n                        <th>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => requestSort('title')}\r\n                                className={getClassNamesFor('title')}\r\n                            >Title</button>\r\n                        </th>\r\n                        <th>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => requestSort('email')}\r\n                                className={getClassNamesFor('email')}\r\n                            >Email</button>\r\n                        </th>\r\n                        <th>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => requestSort('phone')}\r\n                                className={getClassNamesFor('phone')}\r\n                            >Phone Number</button>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {employees\r\n                        .filter(item => {\r\n                            if (!value) return true;\r\n                            if (item.title.toLowerCase().includes(value.toLowerCase())\r\n                                || item.first_name.toLowerCase().includes(value.toLowerCase())\r\n                                || item.last_name.toLowerCase().includes(value.toLowerCase())\r\n                                || item.email.toLowerCase().includes(value.toLowerCase())\r\n                                || item.phone.toLowerCase().includes(value.toLowerCase())\r\n                            ) {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        })\r\n                        .map((emp) => (\r\n                            <tr key={emp.id}>\r\n                                {/* <td><img src={emp.avatar} alt=\"avatar\" /></td> */}\r\n                                <td>{emp.first_name}</td>\r\n                                <td>{emp.last_name}</td>\r\n                                <td>{emp.title}</td>\r\n                                <td>{emp.email}</td>\r\n                                <td className='phone'>{emp.phone}</td>\r\n                            </tr>\r\n                        ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Employee","import React from 'react';\n\n// import './App.css';\nimport Header from './components/Header.jsx'\nimport employees from './employees.json'\nimport Employee from './components/Employee.jsx';\n// import Filter from './components/Filter.jsx'\n\nexport default function App() {\n\n  return (\n    <div>\n      <Header />\n      {/* <Filter /> */}\n      <Employee employees={employees} />\n    </div >\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}